{"version":3,"sources":["redux/phonebook/phonebook-actions.js","components/AppBar.module.css","redux/auth/auth-action.js","redux/auth/auth-reducer.js","route/PrivateRoute.js","route/PublicRoute.js","components/Navigation.js","components/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["fetchItemsRequest","createAction","fetchItemsSuccess","fetchItemsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","password","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","connect","state","authSelectors","getIsAuthenticated","Component","component","redirectTo","routeProps","render","props","to","restricted","className","styles","link","AuthNav","activeClassName","activeLink","container","display","alignItems","fontWeight","marginRight","button","padding","backgroundColor","mapDispatchToProps","onLogout","authOperations","logOut","getUsername","style","type","onClick","header","HomePage","lazy","Phonebook","Login","Registration","App","this","onGetCurrentUser","fallback","path","exact","getCurrentUser","actions","items","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","authAction"],"mappings":"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","file":"static/js/main.66f79540.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\n\r\nconst fetchItemsRequest = createAction('phonebook/fetchItemsRequest');\r\nconst fetchItemsSuccess = createAction('phonebook/fetchItemsSuccess');\r\nconst fetchItemsError = createAction('phonebook/fetchItemsError');\r\n\r\n\r\nconst addContactRequest = createAction('phonebook/addContactRequest');\r\nconst addContactSuccess = createAction('phonebook/addContactSuccess');\r\nconst addContactError = createAction('phonebook/addContactError');\r\n\r\n\r\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nconst deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nexport default {\r\n    fetchItemsRequest,\r\n    fetchItemsSuccess,\r\n    fetchItemsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2i6og\",\"link\":\"AppBar_link__eFOEz\",\"activeLink\":\"AppBar_activeLink__5UX6a AppBar_link__eFOEz\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-action';\r\nimport { authOperations } from '.';\r\nimport authAction from './auth-action';\r\n\r\nconst initialUserState = { name: null, email: null, password: null };\r\n\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n})\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n})\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n})\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.logoutRequest]: () => true,\r\n    [authActions.logoutError]: () => true,\r\n\r\n    [authActions.registerRequest]: () => false,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginRequest]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserRequest]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    isAuthenticated,\r\n    error\r\n})","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport styles from './AppBar.module.css'\r\n\r\nconst Navigation = ({isAuthenticated}) =>(\r\n    <nav>\r\n        <NavLink to='/' className={styles.link} >\r\n            Home\r\n        </NavLink>\r\n        \r\n        {isAuthenticated && (\r\n            <NavLink to='/phonebook' className={styles.link} >\r\n                Phonebook\r\n            </NavLink>\r\n        )}\r\n    </nav>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n        isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navigation)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink to='/register' className={styles.link}  activeClassName={styles.activeLink}>\r\n            Register\r\n        </NavLink>\r\n        <NavLink to='/login' className={styles.link}  activeClassName={styles.activeLink}>\r\n            Login\r\n        </NavLink>\r\n    </div>\r\n)\r\n\r\nexport default AuthNav","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n  button:{\r\n    padding: 3,\r\n    backgroundColor: 'rgb(151, 155, 208)',\r\n  }\r\n};\r\n\r\nfunction UserMenu ({ name, onLogout }) {\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <button style={styles.button} type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport { authSelectors } from '../redux/auth';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({isAuthenticated}) =>(\r\n    <header className={styles.header}>\r\n        <Navigation/>\r\n        {isAuthenticated ? <UserMenu/> : <AuthNav/>}\r\n    </header>\r\n)\r\n\r\nconst mapStateToProps = state =>({\r\n   isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar)","import { Switch, Route } from 'react-router-dom';\nimport { Component, lazy, Suspense } from 'react';\nimport PrivateRoute from './route/PrivateRoute';\nimport PublicRoute from './route/PublicRoute';\nimport './App.css';\nimport AppBar from './components/AppBar';\nimport { connect } from 'react-redux';\nimport { authOperations } from './redux/auth';\n\nconst HomePage = lazy(() => import('./components/HomePage/HomePage'));\nconst Phonebook = lazy(() => import('./components/Phonebook'));\nconst Login = lazy(() => import('./auth/Login/Login'));\nconst Registration = lazy(() => import('./auth/Registration/Registration'));\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<h1>Loader...</h1>}>\n          <Switch>\n            <PublicRoute path=\"/\" exact component={HomePage} />\n\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/phonebook\" component={Registration} />\n\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/phonebook\" component={Login} />\n\n            <PrivateRoute path=\"/phonebook\"  redirectTo=\"/login\" component={Phonebook} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phonebook-actions';\r\n\r\nconst {\r\n    fetchItemsRequest,\r\n    fetchItemsSuccess,\r\n    fetchItemsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} = actions\r\n\r\nconst items = createReducer([], {\r\n    [fetchItemsSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n})\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload\r\n})\r\n\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchItemsRequest] : () => true,\r\n    [fetchItemsSuccess] : () => false,\r\n    [fetchItemsError] : () => false,\r\n    [addContactRequest] : () => true,\r\n    [addContactSuccess] : () => false,\r\n    [addContactError] : () => false,\r\n    [deleteContactRequest] : () => true,\r\n    [deleteContactSuccess] : () => false,\r\n    [deleteContactError] : () => false,\r\n})\r\n\r\n// const error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading\r\n})\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH,\r\n                REHYDRATE,\r\n                PAUSE,\r\n                PERSIST,\r\n                PURGE,\r\n                REGISTER,]\r\n        }\r\n    }),\r\n]\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","import axios from 'axios';\r\nimport authAction from './auth-action';\r\nimport authActions from './auth-action';\r\n\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ''\r\n    }\r\n}\r\n\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials)\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message))\r\n    }\r\n}\r\n\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.message))\r\n    }\r\n}\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken }\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getCurrentUserSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message))\r\n    }\r\n}\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authAction.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authAction.logoutSuccess())\r\n    } catch (error) {\r\n        dispatch(authAction.logoutError(error.message))\r\n    }\r\n}\r\n\r\nexport default { register, logIn, getCurrentUser, logOut }","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};"],"sourceRoot":""}