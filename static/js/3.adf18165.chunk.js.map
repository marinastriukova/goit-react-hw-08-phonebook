{"version":3,"sources":["components/Phonebook.module.css","components/Section/Section.module.css","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ErrorMessage/ErrorMessage.module.css","components/Section/Section.jsx","components/Form/Form.jsx","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/ErrorMessage/ErrorMessage.js","components/Phonebook.js"],"names":["module","exports","Section","title","children","className","style","section","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","Form","name","number","onChangeInput","onSubmitForm","form","onSubmit","formLabel","type","formInput","value","onChange","required","formButton","fetchItemsRequest","actions","fetchItemsSuccess","fetchItemsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","dispatch","a","axios","get","then","data","catch","error","message","item","post","id","delete","getAllContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","toLowerCase","includes","connect","selectors","onRemove","operations","TransitionGroup","component","list","length","map","contact","button","onClick","onChangeFilter","changeFilter","label","e","target","input","ErrorMessage","alert","Phonebook","onInputChange","setState","submitForm","preventDefault","props","find","setTimeout","onAddContact","reset","this","fetchContacts","Component"],"mappings":"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","file":"static/js/3.adf18165.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Phonebook_appear__-Kn8w\",\"appearActive\":\"Phonebook_appearActive__38Y-w\",\"enter\":\"Phonebook_enter__1iOEN\",\"enterActive\":\"Phonebook_enterActive__hC_QM\",\"exit\":\"Phonebook_exit__3_IhI\",\"exitActive\":\"Phonebook_exitActive__3QeFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2hXyN\",\"title\":\"Section_title__2QNjx\",\"appear\":\"Section_appear__18j4D\",\"appearActive\":\"Section_appearActive__2GgWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2j7t2\",\"formLabel\":\"Form_formLabel__1u-yH\",\"formInput\":\"Form_formInput__3FGAs\",\"formButton\":\"Form_formButton__1uytw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2Cdxn\",\"item-appear\":\"ContactsList_item-appear__2uDSt\",\"item-appearActive\":\"ContactsList_item-appearActive__1QON0\",\"item-enter\":\"ContactsList_item-enter__-cNpD\",\"item-enterActive\":\"ContactsList_item-enterActive__1TVCj\",\"item-exit\":\"ContactsList_item-exit__2A7hH\",\"item-exitActive\":\"ContactsList_item-exitActive__3TK3S\",\"items\":\"ContactsList_items__3pTwF\",\"button\":\"ContactsList_button__28O5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2gqFx\",\"input\":\"Filter_input__386CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"ErrorMessage_alert__8K5zL\"};","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from '../Phonebook.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n    return (<div className={style.section}>\r\n        <CSSTransition in={true} appear={true} timeout={500} classNames={styles} unmountOnExit>\r\n            <h1 className={style.title}>{title}</h1>\r\n        </CSSTransition>\r\n        {children}\r\n    </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.any\r\n}\r\n\r\nexport default Section;","import style from './Form.module.css';\r\n\r\nexport default function Form ({ name = '', number = 0, onChangeInput, onSubmitForm }){\r\n\r\n        return (\r\n            <>\r\n                <form className={style.form} onSubmit={onSubmitForm}>\r\n                    <label className={style.formLabel}>\r\n                        Name\r\n                    <input\r\n                            name='name'\r\n                            type=\"text\"\r\n                            className={style.formInput}\r\n                            value={name}\r\n                            onChange={onChangeInput}\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <label className={style.formLabel}>\r\n                        Number\r\n                    <input\r\n                            name='number'\r\n                            type=\"text\"\r\n                            className={style.formInput}\r\n                            value={number}\r\n                            onChange={onChangeInput}\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className={style.formButton}>Add contact</button>\r\n                </form>\r\n                \r\n            </>\r\n        )\r\n    }\r\n","import axios from 'axios';\r\nimport actions from './phonebook-actions';\r\n\r\nconst {\r\n    fetchItemsRequest,\r\n    fetchItemsSuccess,\r\n    fetchItemsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n} = actions;\r\n\r\n\r\n\r\nconst fetchItems = () => async dispatch => {\r\n    dispatch(fetchItemsRequest());\r\n\r\n    // try {\r\n    //     const {data} = await axios.get('http://localhost:4040/contacts');\r\n    //     dispatch(fetchItemsSuccess(data));\r\n    // } catch (error){\r\n    //     dispatch(fetchItemsError(error))\r\n    // }\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchItemsSuccess(data)))\r\n        .catch(error => dispatch(fetchItemsError(error.message)));\r\n}\r\n\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n    const item = {\r\n        name,\r\n        number\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', item)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.message)))\r\n};\r\n\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error.message)))\r\n};\r\n\r\n\r\nexport default { fetchItems, addContact, deleteContact }\r\n","import { createSelector } from '@reduxjs/toolkit'\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (items, filter) => {\r\n        return items.filter(item =>\r\n            item.name.toLowerCase().includes(filter.toLowerCase()))\r\n    }\r\n)\r\n\r\nexport default {\r\n    getAllContacts,\r\n    getFilter,\r\n    getLoading,\r\n    getVisibleContacts\r\n}","import style from './ContactsList.module.css';\r\nimport styles from '../Phonebook.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\n\r\n\r\nfunction ContactsList({ contacts, onRemove }) {\r\n\r\n    return (\r\n        <TransitionGroup component=\"ul\" className={style.list}>\r\n            {contacts.length === 0 ? <CSSTransition in={contacts.length === 0} timeout={250} classNames={styles} unmountOnExit>\r\n            <p>Add contacts please</p>\r\n            </CSSTransition> :\r\n            (contacts.map(contact => {\r\n                return (\r\n                    <CSSTransition key={contact.id} in={true} appear={true} timeout={250} classNames={styles} unmountOnExit>\r\n                        <li className={style.items}>\r\n                            <p>\r\n                                <span>{contact.name}: </span>\r\n                                <span>{contact.number}</span>\r\n                            </p>\r\n                            <button className={style.button} onClick={() => onRemove(contact.id)}>Delete</button>\r\n                        </li>\r\n                    </CSSTransition>)\r\n            }\r\n            ))}\r\n        </TransitionGroup>)\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })),\r\n    onRemove: PropTypes.func\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: selectors.getVisibleContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onRemove: (id) => dispatch(operations.deleteContact(id))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n","import style from './Filter.module.css';\r\nimport styles from '../Phonebook.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport actions from '../../redux/phonebook/phonebook-actions';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\n\r\nfunction Filter({value, onChangeFilter, items}) {\r\n    return(\r\n        <CSSTransition in={items.length > 0} timeout={250} classNames={styles} unmountOnExit>\r\n        <label className={style.label}>\r\n            Find contacts by name\r\n            <input \r\n            type=\"text\"\r\n            value={value}\r\n            onChange={e => onChangeFilter(e.target.value)}\r\n            className={style.input}\r\n            />\r\n        </label>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func,\r\n  };\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    value: selectors.getFilter(state),\r\n    items: selectors.getAllContacts(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeFilter: (value) => dispatch(actions.changeFilter(value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import style from './ErrorMessage.module.css';\r\n\r\nexport default function ErrorMessage() {\r\n    return <p className={style.alert}>This contact is already in phonebook</p>\r\n}","import { Component } from 'react';\r\nimport Section from './Section/Section'\r\nimport Form from './Form/Form';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport ErrorMessage from './ErrorMessage/ErrorMessage';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport style from './Phonebook.module.css';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../redux/phonebook/phonebook-operations';\r\nimport selectors from '../redux/phonebook/phonebook-selectors';\r\n\r\nclass Phonebook extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        filter: '',\r\n        error: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchContacts();\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitForm = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        if (this.props.contacts.find(({ name }) => name.toLowerCase() === this.state.name.toLowerCase())) {\r\n            this.setState({ error: true })\r\n            setTimeout(() => {\r\n                this.setState({ error: false })\r\n            }, 2000)\r\n            return\r\n        }\r\n\r\n        const { name, number } = this.state;\r\n        this.props.onAddContact(name, number);\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Section title='Phonebook'>\r\n                    <Form name={this.state.name}\r\n                        number={this.state.number}\r\n                        onChangeInput={this.onInputChange}\r\n                        onSubmitForm={this.submitForm}></Form>\r\n                </Section>\r\n                <Section title='Contacts'>\r\n                    <CSSTransition timeout={250} classNames={style} >\r\n                        <Filter />\r\n                    </CSSTransition>\r\n                    <CSSTransition timeout={500}>\r\n                        <ContactsList />\r\n                    </CSSTransition>\r\n                    <CSSTransition in={this.state.error === true} timeout={1000} classNames={style} unmountOnExit>\r\n                        <ErrorMessage />\r\n                    </CSSTransition>\r\n                </Section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: selectors.getAllContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchContacts: ()=> dispatch(operations.fetchItems()),onAddContact: (name, number) => dispatch(operations.addContact(name, number))\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook)"],"sourceRoot":""}